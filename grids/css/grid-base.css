/* 
    Um sistema de grid é uma solução tabular utilizando css que serve para acomodar os conteúdos dentro de
    um layout estruturado que se ajusta conforme as diferentes telas.

    É baseado no conceito de linhas e colunas que podem ser envolvidos em 
    um container.

    Tradicionalmente um sistema de gride comporta 12 colunas, sendo esse o 
    limite de 100% da tela. Por exemplo: se você dividir sua linha em 
    duas colunas você terá duas colunas com tamanho de 50%, se dividir em quatro 
    você terá 4 colunas com tamanho de 25% cada.
    Abaixo segue um hanson para entendimento e, posteriormente, você será 
    encorajado a alterá-lo para comportar genericamente 12 colunas.

    Na solução abaixo foi utilizado o display inline-block para melhor 
    controle do alinhamento vertical se comparado com uma solução float. Essa 
    solução funciona da mesma forma que o float left!!
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    border: 1px solid rgb(41, 7, 58);
}

.row {
    width: 100%;
}

.row:after {
    content: "";
    display: table;
    clear: both;
}

[class*='col-'] {
    
    text-align: center;
    float: left;
    /* espaçamento entre as colunas, conhecido como GUTTERS */
    padding: 15px;
}

.col-cl-1   { width: calc((1 * 100%) / 12) }
.col-cl-2   { width: calc((2 * 100%) / 12) }
.col-cl-3   { width: calc((3 * 100%) / 12) }
.col-cl-4   { width: calc((4 * 100%) / 12) }
.col-cl-5   { width: calc((5 * 100%) / 12) }
.col-cl-6   { width: calc((6 * 100%) / 12) }
.col-cl-7   { width: calc((7 * 100%) / 12) }
.col-cl-8   { width: calc((8 * 100%) / 12) }
.col-cl-9   { width: calc((9 * 100%) / 12) }
.col-cl-1   { width: calc((10 * 100%) / 12) }
.col-cl-11  { width: calc((11 * 100%) / 12) }
.col-cl-12  { width: calc((12 * 100%) / 12) }

/* TABLETS */
@media screen and (min-width: 768px){
    .col-tb-1   { width: calc((1 * 100%) / 12) }
    .col-tb-2   { width: calc((2 * 100%) / 12) }
    .col-tb-3   { width: calc((3 * 100%) / 12) }
    .col-tb-4   { width: calc((4 * 100%) / 12) }
    .col-tb-5   { width: calc((5 * 100%) / 12) }
    .col-tb-6   { width: calc((6 * 100%) / 12) }
    .col-tb-7   { width: calc((7 * 100%) / 12) }
    .col-tb-8   { width: calc((8 * 100%) / 12) }
    .col-tb-9   { width: calc((9 * 100%) / 12) }
    .col-tb-1   { width: calc((10 * 100%) / 12) }
    .col-tb-11  { width: calc((11 * 100%) / 12) }
    .col-tb-12  { width: calc((12 * 100%) / 12) }
}

/* DESKTOP */
@media screen and (min-width: 992px){
    .col-dk-1   { width: calc((1 * 100%) / 12) }
    .col-dk-2   { width: calc((2 * 100%) / 12) }
    .col-dk-3   { width: calc((3 * 100%) / 12) }
    .col-dk-4   { width: calc((4 * 100%) / 12) }
    .col-dk-5   { width: calc((5 * 100%) / 12) }
    .col-dk-6   { width: calc((6 * 100%) / 12) }
    .col-dk-7   { width: calc((7 * 100%) / 12) }
    .col-dk-8   { width: calc((8 * 100%) / 12) }
    .col-dk-9   { width: calc((9 * 100%) / 12) }
    .col-dk-1   { width: calc((10 * 100%) / 12) }
    .col-dk-11  { width: calc((11 * 100%) / 12) }
    .col-dk-12  { width: calc((12 * 100%) / 12) }
}

/* TELAS LARGAS - ACIMA DE 1200PX */
@media screen and (min-width: 1200px){
    .col-lg-1   { width: calc((1 * 100%) / 12) }
    .col-lg-2   { width: calc((2 * 100%) / 12) }
    .col-lg-3   { width: calc((3 * 100%) / 12) }
    .col-lg-4   { width: calc((4 * 100%) / 12) }
    .col-lg-5   { width: calc((5 * 100%) / 12) }
    .col-lg-6   { width: calc((6 * 100%) / 12) }
    .col-lg-7   { width: calc((7 * 100%) / 12) }
    .col-lg-8   { width: calc((8 * 100%) / 12) }
    .col-lg-9   { width: calc((9 * 100%) / 12) }
    .col-lg-1   { width: calc((10 * 100%) / 12) }
    .col-lg-11  { width: calc((11 * 100%) / 12) }
    .col-lg-12  { width: calc((12 * 100%) / 12) }
}

.fundo {
    font-family: Arial, Helvetica, sans-serif;
    color: white;
    padding: 15px 0;
    background: purple;
}